[{"/home/xilxilx/projects/distsys/alias/frontend/src/index.js":"1","/home/xilxilx/projects/distsys/alias/frontend/src/App.js":"2","/home/xilxilx/projects/distsys/alias/frontend/src/reportWebVitals.js":"3","/home/xilxilx/projects/distsys/alias/frontend/src/Chatbox.js":"4"},{"size":535,"mtime":1670087650584,"results":"5","hashOfConfig":"6"},{"size":3085,"mtime":1670179889403,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1670087650584,"results":"8","hashOfConfig":"6"},{"size":1839,"mtime":1670087650584,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vawj7p",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/xilxilx/projects/distsys/alias/frontend/src/index.js",[],[],"/home/xilxilx/projects/distsys/alias/frontend/src/App.js",["23"],[],"// import { useState } from 'react';\nimport React, { Component } from 'react';\nimport './App.css';\n// import Frontpage from './components/Frontpage';\n// import Lobby from './components/Lobby';\nimport ChatBox from './Chatbox';\n\nimport socketIO from \"socket.io-client\"\nimport p2p from \"socket.io-p2p\"\n\nconst socket = socketIO.connect(\"http://localhost:4000\")\nconst p2psocket = new p2p(socket)\n\n/*\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('frontpage')\n\n  const [roomName, setRoomName] = useState('')\n  const [roomNameInput, setRoomNameInput] = useState('')\n\n  console.log(roomName)\n  function handleRoomNameInputChange(event) {\n    setRoomNameInput(event.target.value)\n  }\n\n  */\n\n  class App extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        chatLog: []\n      }\n    }\n    \n\n    addChat = (name, message, alert = false) => {\n      this.setState({ chatLog: this.state.chatLog.concat({\n        name,\n        message: `${message}`,\n        timestamp: `${Date.now()}`,\n        alert\n      })});\n    }\n    \n    render() {\n      const { chatLog } = this.state;\n      return (\n        <div className=\"App\">\n          <ChatBox\n            chatLog={chatLog}\n            onSend={(msg) => msg && this.addChat('Me', msg)}\n          />\n         <button onClick={goPrivate}>GO P2P</button> \n        </div>\n      );\n    }\n  }\n\n  const goPrivate = () => {\n    console.log('going private')\n  }\n\n\n\n  /*\n  // if no room name known yet, sets the room name and joins the room\n  // if room name has been set,\n  // then checks if the user entered the correct room name\n  // and joins the room if correct. otherwise annoying alert\n  function handleJoinBtnPress() {\n    if (roomName === '') {\n      if (roomNameInput.trim().length > 0) {\n        setRoomName(roomNameInput)\n        joinRoom()\n      } else {\n        console.log('Empty input')\n      }\n    } else if (roomNameInput === roomName) {\n      joinRoom()\n    } else {\n      alert('Incorrect room name')\n    }\n  }\n\n  function joinRoom() {\n    setCurrentPage('lobby')\n    console.log('you have joined the room ', roomName)\n  }\n\n  function returnToFrontpage() {\n    setCurrentPage('frontpage')\n    console.log('you have exited the room ', roomName)\n  }\n\n  if (currentPage==='frontpage') {\n    return (\n      <div className='App'>\n        <p className='spin'>Alias :3</p>\n        <Frontpage\n          handleJoinBtnPress={handleJoinBtnPress}\n          handleRoomNameInputChange={handleRoomNameInputChange}\n        />\n        <div>Room: {roomName}</div>\n      </div>\n    )\n  } else if (currentPage === 'lobby') {\n    return (\n      <div className='App'>\n        <p className='spin'>Alias :3</p>\n        <Lobby\n          roomName={roomName}\n          returnToFrontpage={returnToFrontpage}\n        />\n        <div>Room: {roomName}</div>\n      </div>\n    )\n  } else {\n    return (\n      <div className='App'>\n        <p className='spin'>Alias :3</p>\n        <p className='funy'>I don't know where you are</p>\n        <div>Room: {roomName}</div>\n      </div>\n    )\n  }\n\n}\n*/\nexport default App;\n","/home/xilxilx/projects/distsys/alias/frontend/src/reportWebVitals.js",[],[],"/home/xilxilx/projects/distsys/alias/frontend/src/Chatbox.js",[],[],{"ruleId":"24","severity":1,"message":"25","line":12,"column":7,"nodeType":"26","messageId":"27","endLine":12,"endColumn":16},"no-unused-vars","'p2psocket' is assigned a value but never used.","Identifier","unusedVar"]